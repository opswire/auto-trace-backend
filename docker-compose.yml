version: '3.9'

services:
  postgres:
    container_name: postgres
    image: postgres
    volumes:
      - pg-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: 'user'
      POSTGRES_PASSWORD: 'pass'
      POSTGRES_DB: 'postgres'
    ports:
      - "5454:5432"
    networks:
      - net

  ads:
    build:
      context: .
      dockerfile: ./docker/Dockerfile-ads
    container_name: ads
    environment:
      PG_URL: 'postgres://postgres:pass@postgres:5432/postgres'
    ports:
      - "8989:80"
    volumes:
      - ./:/app
    networks:
      - net
    depends_on:
      - postgres

  sso:
    build:
      context: .
      dockerfile: ./docker/Dockerfile-sso
    container_name: sso
    environment:
      PG_URL: 'postgres://postgres:pass@postgres:5432/postgres'
    ports:
      - "50051:50051"
      - "8787:80"
    volumes:
      - ./:/app
    networks:
      - net
    depends_on:
      - postgres

  nfts_service:
    build:
      context: .
      dockerfile: ./docker/Dockerfile-nfts
    container_name: nfts_service
    environment:
      PG_URL: 'postgres://postgres:pass@postgres:5432/postgres'
    ports:
      - "8686:80"
    volumes:
      - ./:/app
    networks:
      - net
    depends_on:
      - postgres

  appointments_service:
    build:
      context: .
      dockerfile: ./docker/Dockerfile-appointments
    container_name: appointments_service
    environment:
      PG_URL: 'postgres://postgres:pass@postgres:5432/postgres'
    ports:
      - "8585:80"
    volumes:
      - ./:/app
    networks:
      - net
    depends_on:
      - postgres

  payments_service:
    build:
      context: .
      dockerfile: ./docker/Dockerfile-payments
    container_name: payments_service
    environment:
      PG_URL: 'postgres://postgres:pass@postgres:5432/postgres'
    ports:
      - "8484:80"
    volumes:
      - ./:/app
    networks:
      - net
    depends_on:
      - postgres

  chats_service:
    build:
      context: .
      dockerfile: ./docker/Dockerfile-chats
    container_name: chats_service
    environment:
      PG_URL: 'postgres://postgres:pass@postgres:5432/postgres'
    ports:
      - "8383:80"
    volumes:
      - ./:/app
    networks:
      - net
    depends_on:
      - postgres

  prometheus:
    image: prom/prometheus
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - "9090:9090"
    restart: always
    networks:
      - net

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3001:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - net

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    networks:
      - net
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    networks:
      - net

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    ports:
      - "8081:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local-kafka
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    depends_on:
      - kafka
      - zookeeper
    networks:
      - net

  mailhog:
    image: mailhog/mailhog
    ports:
      - "8025:8025" # Web UI
      - "1025:1025" # SMTP
    networks:
      - net

  consumer:
    build:
      context: .
      dockerfile: ./docker/Dockerfile-consumer
    depends_on:
      - kafka
      - mailhog
    environment:
      KAFKA_BROKER: kafka:9092
      SMTP_HOST: mailhog
      SMTP_PORT: 1025
      FROM_EMAIL: auto-trace-official@gmail.com
    networks:
      - net

volumes:
  pg-data:
  prometheus_data:
  grafana_data:

networks:
  net:
    driver: bridge
