version: '3.9'

services:
  postgres:
    container_name: postgres
    image: postgres
    volumes:
      - pg-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: 'user'
      POSTGRES_PASSWORD: 'pass'
      POSTGRES_DB: 'postgres'
    ports:
      - "5454:5432"
    networks:
      - net

  ads:
    build:
      context: .
      dockerfile: ./docker/Dockerfile-ads
    container_name: ads
    environment:
      PG_URL: 'postgres://postgres:pass@postgres:5432/postgres'
    ports:
      - "8989:80"
    volumes:
      - ./:/app
    networks:
      - net
    depends_on:
      - postgres

  sso:
    build:
      context: .
      dockerfile: ./docker/Dockerfile-sso
    container_name: sso
    environment:
      PG_URL: 'postgres://postgres:pass@postgres:5432/postgres'
    ports:
      - "50051:50051"
      - "8787:80"
    volumes:
      - ./:/app
    networks:
      - net
    depends_on:
      - postgres

  prometheus:
    image: prom/prometheus
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - "9090:9090"
    restart: always
    networks:
      - net

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3001:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - net

volumes:
  pg-data:
  prometheus_data:
  grafana_data:

networks:
  net:
    driver: bridge
